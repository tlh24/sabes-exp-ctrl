#-----------------------------------------------------------------------------
#
#      File         :  Common.def
#      Abstract     :  Common definitions between all targets
#
#-----------------------------------------------------------------------------



#=============================================================================
# Set kernel & CPU Properties
#=============================================================================
# Get kernel version
KERNEL_VER := $(shell uname -r | awk -F. '{print $$1"."$$2}')

# Determine CPU architecture & properties
ARCH := $(shell uname -m | sed 's/i.86/i386/')
ifeq ($(ARCH),i386)
    PLX_CPU_BITS   = 32
    PLX_CPU_ENDIAN = Little
endif
ifeq ($(ARCH),alpha)
    PLX_CPU_BITS   = 32
    PLX_CPU_ENDIAN = Big
endif
ifeq ($(ARCH),x86_64)
    PLX_CPU_BITS   = 64
    PLX_CPU_ENDIAN = Little
endif
ifeq ($(ARCH),ia64)
    PLX_CPU_BITS   = 64
    PLX_CPU_ENDIAN = Little
endif
ifeq ($(ARCH),ppc)
    PLX_CPU_BITS   = 32
    PLX_CPU_ENDIAN = Big
endif
ifeq ($(ARCH),mips)
    PLX_CPU_BITS   = 32
    PLX_CPU_ENDIAN = Big
endif
ifeq ($(ARCH),mips64)
    PLX_CPU_BITS   = 64
    PLX_CPU_ENDIAN = Big
endif



#=============================================================================
# Check for errors
#=============================================================================
ifndef PLX_SDK_DIR
    $(error ERROR: Variable 'PLX_SDK_DIR' not set ***)
endif

ifndef PLX_DIR
    PLX_DIR=$(PLX_SDK_DIR)
endif

ifndef TOOLS_NAME
    # Only Gcc is supported
    TOOLS_NAME := Gcc
endif

ifndef ImageName
    $(error ERROR: Variable 'ImageName' not set ***)
endif

ifndef TGT_TYPE
    $(error ERROR: Variable 'TGT_TYPE' not set ***)
endif

ifndef PLX_CHIP
    ifeq ($(TGT_TYPE), Driver)
        $(error ERROR: Variable 'PLX_CHIP' not set ***)
    else
        PLX_CHIP := n/a
    endif
endif

ifndef KERNEL_VER
    $(error ERROR: Variable 'KERNEL_VER' not set ***)
endif

ifndef PLX_CPU_BITS
    $(error ERROR: Variable 'PLX_CPU_BITS' not set ***)
endif

ifndef PLX_CPU_ENDIAN
    $(error ERROR: Variable 'PLX_CPU_ENDIAN' not set ***)
endif

ifndef KDIR
    ifeq ($(TGT_TYPE), Driver)
        KDIR := /lib/modules/$(shell uname -r)/build
        PWD  := $(shell pwd)
    endif
endif



#=============================================================================
# Conditional to enable verbose mode (display commands)
#
#  V defined     = Commands will be displayed
#  V not defined = Commands will not be displayed
#=============================================================================
ifndef V
    Q=@
else
    VERBOSE=-v
endif



#=============================================================================
# The directory locations:
#
#  OUT_DIR      = Contains the final build images
#  OBJ_DIR      = Contains all intermediate build files (e.g. obj, map, etc)
#  COMMON_DIR   = Directory where common shared files reside
#  PLX_CHIP_DIR = Directory where chip-specific driver files are located
#=============================================================================
ifeq ($(TGT_TYPE), Driver)
    OUT_DIR = Plx$(PLX_CHIP)
else
    OUT_DIR = $(TGT_TYPE)
endif

OBJ_DIR = $(OUT_DIR)/Obj$(DBG)

ifeq ($(TGT_TYPE), App)
    COMMON_DIR := $(PLX_DIR)/Samples/Shared
endif

ifeq ($(TGT_TYPE), Driver)
    # Set default source directory
    COMMON_DIR := Source.Plx$(PLX_CHIP)

    # 9000-series if chip folder exists
    ifneq ($(wildcard $(PLX_DIR)/Driver/Source.Plx9000/Chip/$(PLX_CHIP)),)
        COMMON_DIR   := Source.Plx9000
        PLX_CHIP_DIR := $(COMMON_DIR)/Chip/$(PLX_CHIP)
    endif
endif



#=============================================================================
# Additional include directories
# Note: Put '-I' before Include directories
#=============================================================================
PLX_INC_DIR += -I$(PLX_DIR)/Include

ifeq ($(TGT_TYPE), App)
    PLX_INC_DIR +=  -I. -I$(COMMON_DIR)
endif

ifeq ($(TGT_TYPE), Driver)
    PLX_INC_DIR += \
       -I$(KDIR)/include \
       -I$(PLX_DIR)/Driver/$(COMMON_DIR)

    ifneq ($(PLX_CHIP_DIR),)
        PLX_INC_DIR += -I$(PLX_DIR)/Driver/$(PLX_CHIP_DIR)
    endif
endif



#=============================================================================
# Additional application Library files
#   -lm  : Adds math library (for pow() function)
#   -ldl : Add support for dynamic library loading functions (used in Aardvark.c)
#=============================================================================
ifeq ($(TGT_TYPE), App)
    LIBS += $(PLX_DIR)/PlxApi/Library/PlxApi$(DBG).a
    LIBS += -lm -ldl
endif



#=============================================================================
# Additional PLX-specific command-line options
#=============================================================================
ifeq ($(PLX_CPU_ENDIAN),Big)
    PLX_OPT += -DPLX_BIG_ENDIAN
else
    PLX_OPT += -DPLX_LITTLE_ENDIAN
endif

ifeq (1,$(shell [ -r /etc/redhat-release ] && echo 1 || echo 0))
    PLX_OPT += -DRED_HAT_LINUX_KERNEL
endif

ifdef PLX_DEBUG
    PLX_OPT += -DPLX_DEBUG
endif

ifeq ($(TGT_TYPE), App)
    PLX_OPT += -DPLX_LINUX 
endif

# Add Position Independent Code (-fPIC) to support Shared Object libaries
ifeq ($(TGT_TYPE), Library)
    PLX_OPT += -DPLX_LINUX -fPIC
endif

ifeq ($(TGT_TYPE), Driver)
    ifdef PLX_DISPLAY_SGL
        PLX_OPT += -DPLX_DISPLAY_SGL
    endif

    PLX_OPT += -DPLX_DRIVER -DPLX_LINUX_DRIVER -DPLX_CHIP=$(PLX_CHIP)
endif

# Set flag for 32/64-bit system
ifeq ($(PLX_CPU_BITS), 32)
    PLX_OPT += -DPLX_32BIT
else
    ifeq ($(PLX_CPU_BITS), 64)
        PLX_OPT += -DPLX_64BIT
    endif
endif

EXTRA_CFLAGS += $(PLX_OPT) $(PLX_INC_DIR)



#=============================================================================
# PLX specific definitions
#=============================================================================
ifdef PLX_DEBUG
    DBG        = _dbg
    BUILD_TYPE = Debug
else
    BUILD_TYPE = Release
endif
